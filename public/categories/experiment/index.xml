<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Experiment on Electronic Lab Notebook</title>
    <link>/categories/experiment/</link>
    <description>Recent content in Experiment on Electronic Lab Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>your@email.com (Your Name)</managingEditor>
    <webMaster>your@email.com (Your Name)</webMaster>
    <copyright>(c) 2018 -- All rights reserved.</copyright>
    <lastBuildDate>Wed, 04 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/experiment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using emojis in this setup</title>
      <link>/posts/using-emojis-in-this-setup/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/using-emojis-in-this-setup/</guid>
      <description>To get access to emojis set the following flag in the config.toml file:
enableEmoji = true  Note: for emojis to be interpreted correctly your file needs to be an .Rmarkdown file, .Rmd won&amp;rsquo;t work.
This should mean that emojis work: ðŸ˜„ ðŸ¤˜ ðŸ’€
Here is a cheatsheet of emoji codes: https://www.webpagefx.com/tools/emoji-cheat-sheet/
An R package for emojis The package emo(ji) allows the insertion of emoji using R.
# install.packages(&amp;quot;devtools&amp;quot;) devtools::install_github(&amp;quot;hadley/emo&amp;quot;)  Load the package:</description>
    </item>
    
    <item>
      <title>Performing simple linear regressions in R</title>
      <link>/posts/performing-simple-linear-regressions-in-r/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/performing-simple-linear-regressions-in-r/</guid>
      <description>Linear regression We will use the mtcars data, specifically the miles per gallon (mpg) versus the weight (wt) - we obviously expect to see a strong association between these two variables.
fit &amp;lt;- lm(mpg~wt, data=mtcars) summary(fit) ## ## Call: ## lm(formula = mpg ~ wt, data = mtcars) ## ## Residuals: ## Min 1Q Median 3Q Max ## -4.5432 -2.3647 -0.1252 1.4096 6.8727 ## ## Coefficients: ## Estimate Std. Error t value Pr(&amp;gt;|t|) ## (Intercept) 37.</description>
    </item>
    
  </channel>
</rss>